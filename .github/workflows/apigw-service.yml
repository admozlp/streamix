name: API Gateway Service Tests

concurrency:
  group: deploy-server
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
    paths:
      - 'services/apigw-service/**'
      - 'modules/common/**'
      - 'dependencies.gradle'
      - 'build.gradle'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/apigw-service/**'
      - 'modules/common/**'

jobs:
  deploy-apigw:
    name: Deploy API Gateway Service
    runs-on: ubuntu-latest
    
    steps:
      - name: Download code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Test API Gateway Service
        run: ./gradlew :apigw-service:test

      - name: Build API Gateway Service
        run: ./gradlew :apigw-service:build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Latest Version from Docker Hub
        id: version
        run: |
          LATEST_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/apigw-service/tags/?page_size=1" | \
            jq -r '.results[0].name // "0.0.0"' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' || echo "0.0.0")
          
          echo "Current latest tag: $LATEST_TAG"
          
          if [ "$LATEST_TAG" = "0.0.0" ] || [ "$LATEST_TAG" = "null" ]; then
            NEW_VERSION="1.0.0"
          else
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          fi
          
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/apigw-service:${{ steps.version.outputs.new_version }} \
            -f services/apigw-service/Dockerfile .
          
          docker tag ${{ secrets.DOCKER_USERNAME }}/apigw-service:${{ steps.version.outputs.new_version }} \
            ${{ secrets.DOCKER_USERNAME }}/apigw-service:latest
          
          docker push ${{ secrets.DOCKER_USERNAME }}/apigw-service:${{ steps.version.outputs.new_version }}
          docker push ${{ secrets.DOCKER_USERNAME }}/apigw-service:latest

      - name: Show Pushed Images
        run: |
          echo "Successfully pushed:"
          echo "üê≥ ${{ secrets.DOCKER_USERNAME }}/apigw-service:${{ steps.version.outputs.new_version }}"
          echo "üê≥ ${{ secrets.DOCKER_USERNAME }}/apigw-service:latest" 

      - name: Upload docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "docker-compose.yml"
          target: "/app"

      - name: SSH Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "üöÄ Deploying apigw-service version: ${{ steps.version.outputs.new_version }}"
            mkdir -p /app
            cd /app
            sed -i "s|image: ${{ secrets.DOCKER_USERNAME }}/apigw-service:.*|image: ${{ secrets.DOCKER_USERNAME }}/apigw-service:${{ steps.version.outputs.new_version }}|" docker-compose.yml
            docker compose -p streamix pull apigw-service
            docker compose -p streamix up -d --no-deps apigw-service