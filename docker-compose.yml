services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: streamix_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: streamix_user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - streamix_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d streamix_user" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Eureka Service Discovery
  eureka-service:
    build:
      context: .
      dockerfile: services/eureka-service/Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - streamix_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: on-failure

  # User Service
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    container_name: streamix-user-service
    ports:
      - "8080"  # Random port assignment
    depends_on:
      postgres:
        condition: service_healthy
      eureka-service:
        condition: service_healthy
    networks:
      - streamix_network
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/streamix_user
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      EUREKA_URI: http://eureka-service:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure

  # API Gateway Service
  apigw-service:
    build:
      context: .
      dockerfile: services/apigw-service/Dockerfile
    container_name: streamix-apigw-service
    ports:
      - "9100:9100"
    depends_on:
      eureka-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - streamix_network
    environment:
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_URI: http://eureka-service:8761/eureka/
      SERVER_PORT: 9100
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9100/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 50s
    restart: on-failure

volumes:
  postgres_data:

networks:
  streamix_network:
    driver: bridge 